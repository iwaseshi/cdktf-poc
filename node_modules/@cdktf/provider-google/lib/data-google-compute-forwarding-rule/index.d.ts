import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataGoogleComputeForwardingRuleConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule#id DataGoogleComputeForwardingRule#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule#name DataGoogleComputeForwardingRule#name}
    */
    readonly name: string;
    /**
    * The project this resource belongs in.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule#project DataGoogleComputeForwardingRule#project}
    */
    readonly project?: string;
    /**
    * The location of this resource.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule#region DataGoogleComputeForwardingRule#region}
    */
    readonly region?: string;
}
export interface DataGoogleComputeForwardingRuleServiceDirectoryRegistrations {
}
export declare function dataGoogleComputeForwardingRuleServiceDirectoryRegistrationsToTerraform(struct?: DataGoogleComputeForwardingRuleServiceDirectoryRegistrations): any;
export declare class DataGoogleComputeForwardingRuleServiceDirectoryRegistrationsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataGoogleComputeForwardingRuleServiceDirectoryRegistrations | undefined;
    set internalValue(value: DataGoogleComputeForwardingRuleServiceDirectoryRegistrations | undefined);
    get namespace(): string;
    get service(): string;
}
export declare class DataGoogleComputeForwardingRuleServiceDirectoryRegistrationsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataGoogleComputeForwardingRuleServiceDirectoryRegistrationsOutputReference;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule google_compute_forwarding_rule}
*/
export declare class DataGoogleComputeForwardingRule extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "google_compute_forwarding_rule";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/google/d/compute_forwarding_rule google_compute_forwarding_rule} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataGoogleComputeForwardingRuleConfig
    */
    constructor(scope: Construct, id: string, config: DataGoogleComputeForwardingRuleConfig);
    get allPorts(): cdktf.IResolvable;
    get allowGlobalAccess(): cdktf.IResolvable;
    get backendService(): string;
    get creationTimestamp(): string;
    get description(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    get ipAddress(): string;
    get ipProtocol(): string;
    get isMirroringCollector(): cdktf.IResolvable;
    get labelFingerprint(): string;
    private _labels;
    get labels(): cdktf.StringMap;
    get loadBalancingScheme(): string;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    get network(): string;
    get networkTier(): string;
    get portRange(): string;
    get ports(): string[];
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    get pscConnectionId(): string;
    get pscConnectionStatus(): string;
    private _region?;
    get region(): string;
    set region(value: string);
    resetRegion(): void;
    get regionInput(): string | undefined;
    get selfLink(): string;
    private _serviceDirectoryRegistrations;
    get serviceDirectoryRegistrations(): DataGoogleComputeForwardingRuleServiceDirectoryRegistrationsList;
    get serviceLabel(): string;
    get serviceName(): string;
    get subnetwork(): string;
    get target(): string;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface SccSourceIamPolicyConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy#id SccSourceIamPolicy#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy#organization SccSourceIamPolicy#organization}
    */
    readonly organization: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy#policy_data SccSourceIamPolicy#policy_data}
    */
    readonly policyData: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy#source SccSourceIamPolicy#source}
    */
    readonly source: string;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy google_scc_source_iam_policy}
*/
export declare class SccSourceIamPolicy extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_scc_source_iam_policy";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/google/r/scc_source_iam_policy google_scc_source_iam_policy} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options SccSourceIamPolicyConfig
    */
    constructor(scope: Construct, id: string, config: SccSourceIamPolicyConfig);
    get etag(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _organization?;
    get organization(): string;
    set organization(value: string);
    get organizationInput(): string | undefined;
    private _policyData?;
    get policyData(): string;
    set policyData(value: string);
    get policyDataInput(): string | undefined;
    private _source?;
    get source(): string;
    set source(value: string);
    get sourceInput(): string | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
